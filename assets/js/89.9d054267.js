(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{687:function(s,e,t){"use strict";t.r(e);var a=t(15),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"sql-语句的优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql-语句的优化"}},[s._v("#")]),s._v(" SQL 语句的优化")]),s._v(" "),t("p",[s._v("主要围绕如何使用索引展开")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("不要把 select 子句写成 "),t("code",[s._v("select *")])]),s._v(" "),t("ol",[t("li",[s._v("返回结果集数量太多了")]),s._v(" "),t("li",[s._v("需要先读取表结构，换成字段名称")])])]),s._v(" "),t("li",[t("p",[s._v("谨慎使用模糊查询")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%S%'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("「%」在左边，无法使用左前缀索引查询。")])]),s._v(" "),t("li",[t("p",[s._v("对 order by 排序的字段设置索引")]),s._v(" "),t("p",[s._v("索引是二叉树机制，索引建立就是有序的了，所以不用做额外的排序计算")])]),s._v(" "),t("li",[t("p",[s._v("少用 is null 和 is not null")]),s._v(" "),t("p",[s._v("会让 mysql 跳过索引，进行全表查询。")]),s._v(" "),t("p",[s._v("null 值无法进行排序，所以不会记录在二叉树里，所以与 null 值有关的判定都不会走索引。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询奖金不为空的数据")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" comm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以改写成")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" comm "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 还可以对 comm 设置非空约束，使用 -1 表示没有奖金。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("尽量少用 "),t("code",[s._v("!=")]),s._v(" 运算符")]),s._v(" "),t("p",[s._v("无法利用二叉树机制。就无法走索引了。")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[s._v("selecet ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以改写成")]),s._v("\nselecet ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("尽量少用 OR 运算索引")]),s._v(" "),t("p",[s._v("同样会让索引失效， OR 之前的会走索引，之后的就无法走索引了")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- =20 走索引，=30 无法走索引")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以改写为两个 sql")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("union")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" deptno "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("尽量少用 in 和 not int 运算符")]),s._v(" "),t("p",[s._v("在某些情况下使用 in 能走索引，"),t("RouterLink",{attrs:{to:"/mysql-tutorial/high-performance/05/04.html#支持多种过滤条件"}},[s._v("参考 mysql 高性能一书")])],1),s._v(" "),t("p",[s._v("也可以将 in 改写成 union 关联多个拆分开的查询")])]),s._v(" "),t("li",[t("p",[s._v("避免条件语句中的数据类型转换")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" deptno"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'20'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在我们的苦衷 deptno 是整数类型，这里写了字符串类型，mysql 需要先转换类型，再匹配，这会影响执行速度")])]),s._v(" "),t("li",[t("p",[s._v("在表达式左侧使用 "),t("strong",[s._v("运算符和函数")]),s._v(" 都会让索引失效")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询年薪超过 12 万的员工")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以改写为")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询 2000 年以后入职的员工")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("year")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("hiredate"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 可以改写为")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" ename "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_emp "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("year")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2000-01-01 00:00:00'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])])])])}),[],!1,null,null,null);e.default=n.exports}}]);