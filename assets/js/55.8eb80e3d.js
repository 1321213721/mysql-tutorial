(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{415:function(s,t,a){s.exports=a.p+"assets/img/image-20200607180027818.d202c1e4.png"},655:function(s,t,a){"use strict";a.r(t);var e=a(15),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"逻辑删除还是物理删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑删除还是物理删除"}},[s._v("#")]),s._v(" 逻辑删除还是物理删除")]),s._v(" "),e("p",[s._v("一般情况下，公司会要求只能逻辑删除不能物理删除。那么这是为什么呢？")]),s._v(" "),e("h2",{attrs:{id:"物理删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#物理删除"}},[s._v("#")]),s._v(" 物理删除")]),s._v(" "),e("p",[s._v("使用 delete、truncate、drop 语句删除数据。就是把数据从硬盘中删除，可释放存储空间，缩小数据表的体积。")]),s._v(" "),e("h3",{attrs:{id:"代价：恢复数据困难"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代价：恢复数据困难"}},[s._v("#")]),s._v(" 代价：恢复数据困难")]),s._v(" "),e("p",[s._v("那么物理删除是有代价的（如果想要恢复数据的话）：")]),s._v(" "),e("ul",[e("li",[s._v("恢复数据难度大")]),s._v(" "),e("li",[s._v("还要停掉数据库，对业务系统影响巨大")])]),s._v(" "),e("p",[s._v("第一种恢复数据的方法：利用 binlog 日志")]),s._v(" "),e("p",[s._v("大概的恢复流程如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:a(415),alt:"image-20200607180027818"}})]),s._v(" "),e("ol",[e("li",[s._v("程序分析 binlog 日志，找出误删除的日志，踢出掉该语句")]),s._v(" "),e("li",[s._v("然后把日志里的数据重新执行一遍")])]),s._v(" "),e("p",[s._v("更多的细节视频中也没有说清楚，要使用这个方法，需要你对 binlog 日志比较熟悉。")]),s._v(" "),e("p",[s._v("第二种恢复数据的方法：给数据库做一个颜时同步节点")]),s._v(" "),e("ul",[e("li",[s._v("给数据库配置一个同步数据的数据库")]),s._v(" "),e("li",[s._v("同步时间，要延时：比如 1 小时同步一次")]),s._v(" "),e("li",[s._v("当出现问题的时候，只要在这个延时时间内，都还可以恢复出一定的数据")])]),s._v(" "),e("h3",{attrs:{id:"代价：主键不连续"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#代价：主键不连续"}},[s._v("#")]),s._v(" 代价：主键不连续")]),s._v(" "),e("p",[s._v("物理删除会造成主键的不连续，导致分页查询变慢；")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("从 1000 条记录开始往后取 20 条数据。它需要计数跳过的行，越往后计数越多，就越慢。需要一个方法来加快查询。")]),s._v(" "),e("p",[s._v("于是就想到了如下方法：通过主键字段分页的方式")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1020")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("主键是带索引的，条件过滤可以快速的过滤掉很多数据。（这方面要去了解 b-tree 索引的原理，你才能明白）。")]),s._v(" "),e("p",[s._v("如果采用 "),e("strong",[s._v("物理删除")]),s._v("，那么将导致数据不连续了，无法通过这种方式跳过 N 条数据。")]),s._v(" "),e("p",[s._v("在后续的课程中会讲解分页的优化。")]),s._v(" "),e("h2",{attrs:{id:"什么数据不适合物理删除？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么数据不适合物理删除？"}},[s._v("#")]),s._v(" 什么数据不适合物理删除？")]),s._v(" "),e("p",[e("strong",[s._v("核心业务表 "),e("strong",[s._v("的数据不建议做物理删除")]),s._v("，只做状态变更")]),s._v("。比如订单作废、账户禁用、优惠卷作废等等。")]),s._v(" "),e("p",[s._v("这种做法其实就是 "),e("strong",[s._v("逻辑删除")])]),s._v(" "),e("p",[s._v("当数据量大的时候，想要缩小数据表的体积，可以将逻辑删除的数据转移到历史表。")]),s._v(" "),e("p",[e("strong",[s._v("注意：")]),s._v(" 这里说的转移记录，和前面的分页方案无关了，不要考虑前面那个分页场景了。")]),s._v(" "),e("h2",{attrs:{id:"逻辑删除"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#逻辑删除"}},[s._v("#")]),s._v(" 逻辑删除")]),s._v(" "),e("p",[s._v("可以给数据添加一个字段，如 "),e("code",[s._v("is_deleted")]),s._v(" ，用该字段标记该数据已经逻辑删除，查询的时候跳过这些数据。")]),s._v(" "),e("p",[s._v("对于迁移历史记录表，也是有必要添加该 "),e("code",[s._v("is_deleted")]),s._v(" 字段的，例如：我们可以在系统负载较少的时候（如后半夜访问较少的时候），通过定时任务将逻辑删除的数据，迁移到历史表。")]),s._v(" "),e("h2",{attrs:{id:"改造我们的核心业务表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#改造我们的核心业务表"}},[s._v("#")]),s._v(" 改造我们的核心业务表")]),s._v(" "),e("p",[s._v("之前创建的数据表，我们都没有设置这个逻辑删除的字段。这里要去改造一下。由于表众多，这里演示其中一个表的「逻辑删除」和「历史表」的制作")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 克隆表结构：创建历史表")]),s._v("\ncrete "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_user_history "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" t_user"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 添加删除字段：历史表中不加该字段，因为都是删除的数据")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" t_user\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("add")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),s._v(" is_deleted "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("comment")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'逻辑删除'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);