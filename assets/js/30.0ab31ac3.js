(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{434:function(s,a,t){s.exports=t.p+"assets/img/image-20200613215435043.02c218fd.png"},435:function(s,a,t){s.exports=t.p+"assets/img/image-20200613215906767.78e5e163.png"},436:function(s,a,t){s.exports=t.p+"assets/img/image-20200613220518698.df18d600.png"},681:function(s,a,t){"use strict";t.r(a);var n=t(15),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"数据库-程序-缓存如何选？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库-程序-缓存如何选？"}},[s._v("#")]),s._v(" 数据库/程序 缓存如何选？")]),s._v(" "),n("h2",{attrs:{id:"为什么要缓存数据？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么要缓存数据？"}},[s._v("#")]),s._v(" 为什么要缓存数据？")]),s._v(" "),n("p",[s._v("数据库中的数据是存放在硬盘上的，从数据库中读取肯定比内存慢。")]),s._v(" "),n("p",[s._v("放内存中，一般会给数据一个过期时间，不常用的就会自动清理掉。")]),s._v(" "),n("h2",{attrs:{id:"数据库性能"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库性能"}},[s._v("#")]),s._v(" 数据库性能")]),s._v(" "),n("p",[s._v("经过优化的 MySQL 每秒可以处理 5000 次读取，或则 3000 次写入，负载不高的时候，响应时间通常在 10ms 以内，但是在 1 万并发的时候，要保证 10ms  以内的响应速度，任何数据库都做不到。")]),s._v(" "),n("p",[s._v("这个时候就可以用内存来缓存数据了。但是问题来了，这个数据是由谁来缓存？")]),s._v(" "),n("p",[n("img",{attrs:{src:t(434),alt:"image-20200613215435043"}})]),s._v(" "),n("p",[s._v("由程序还是数据库？")]),s._v(" "),n("h2",{attrs:{id:"数据库缓存"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库缓存"}},[s._v("#")]),s._v(" 数据库缓存")]),s._v(" "),n("p",[s._v("程序和数据库都有自己独立的一套缓存方案。")]),s._v(" "),n("p",[s._v("MySQL 缓存是 KV 结构的，Key 是执行过的 SQL 语句，Value 是查询的结果。如果执行添加、修改、删除，或则修改表结构，都会造成缓存清空。")]),s._v(" "),n("h2",{attrs:{id:"数据查询过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据查询过程"}},[s._v("#")]),s._v(" 数据查询过程")]),s._v(" "),n("p",[s._v("执行 SQL 语句，MySQL 先查询缓存。命中数据，就从缓存中提取数据；没有命中，就从数据库中查询数据，同时会缓存到内存中。")]),s._v(" "),n("p",[n("img",{attrs:{src:t(435),alt:"image-20200613215906767"}})]),s._v(" "),n("h2",{attrs:{id:"数据库缓存注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库缓存注意事项"}},[s._v("#")]),s._v(" 数据库缓存注意事项")]),s._v(" "),n("p",[s._v("默认是关闭的，要使用需要先开启。但是 MySQL 8+ 后，去掉了查询缓存这个功能。")]),s._v(" "),n("ul",[n("li",[s._v("所有对数据加锁的事务中，不会使用查询缓存\n"),n("ul",[n("li",[s._v("比如：一个事务中，update 后，使用 select 就不会使用缓存")])])]),s._v(" "),n("li",[s._v("查询语句必须一模一样，才有机会命中缓存")])]),s._v(" "),n("h2",{attrs:{id:"该不该使用数据库缓存？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#该不该使用数据库缓存？"}},[s._v("#")]),s._v(" 该不该使用数据库缓存？")]),s._v(" "),n("p",[s._v("MySQL8+ 去掉了查询缓存，Oracle 官方也不推荐使用查询缓存。")]),s._v(" "),n("p",[s._v("查询下 MySQL8.0 的查询缓存是否支持：")]),s._v(" "),n("div",{staticClass:"language-sql line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sql"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" variables  "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%query_cache'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查询结果是")]),s._v("\nhave_query_cache"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("NO")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("下图是 mysql 5.7 的查询结果")]),s._v(" "),n("p",[n("img",{attrs:{src:t(436),alt:"image-20200613220518698"}})]),s._v(" "),n("p",[s._v("可以看到是支持，但是查询缓存没有开启。")]),s._v(" "),n("p",[n("strong",[s._v("数据库缓存的根本问题是")]),s._v("：不能细粒度设置哪些表需要缓存，当 MySQL 缓存了很多结果的时候，一条更新语句就会让缓存全部作废，这严重的加重了内存管理的负担。")]),s._v(" "),n("p",[s._v("哪些数据适合缓存？很少修改的数据，并且经常使用的数据，才值得去缓存，在 MySQL 中，我们无法细粒度的来选择。")]),s._v(" "),n("h2",{attrs:{id:"程序缓存的优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#程序缓存的优势"}},[s._v("#")]),s._v(" 程序缓存的优势")]),s._v(" "),n("p",[s._v("Redis、Memcached 这些缓存产品，都可以在程序中细粒度的设置哪些查询需要缓存，哪些不需要。")]),s._v(" "),n("p",[s._v("对于 java 来说，spring 框架提供了缓存技术的支持。")]),s._v(" "),n("h2",{attrs:{id:"springcache-技术"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springcache-技术"}},[s._v("#")]),s._v(" SpringCache 技术")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Cacheable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Cache1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("get")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行查询")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回的结果会被缓存")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("User")]),s._v("对象；\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("建议：单表查询结果可以缓存，表连接查询不建议缓存。因为你不太确定哪张表是经常修改的。")]),s._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 让缓存失效的注解")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@CacheEvict")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Cache1"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Long")]),s._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 执行删除操作")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);